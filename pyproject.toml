[tool.poetry]
name = "comps"
version = "0.0.1"
description = "Comparative and causal analysis"
authors = ["Charles Kelley"]
license = "BSD-3-Clause"
readme = "README.rst"

packages = [{ include = "comps", from = "src" }]
include = [{ path = "tests", format = "sdist" }]

repository = "https://github.com/cksisu/comps"
documentation = "httx://comps/doc/host"

keywords = ["ml", "statistics", "comps"]
classifiers = [
  "Environment :: Console",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Topic :: Scientific/Engineering :: Information Analysis",
]


[tool.poetry.build]
generate-setup-file = false


[tool.poetry.dependencies]
# Packages requried to use all comps package computation and visualization
# related functions and methods
python = ">=3.9,<3.11"
matplotlib = "^3.5"
ray = { version = "^2.0", extras = ["data"], optional = true }
scikit-learn = "^1.1"
scipy = ">=1.8"  # Added to ensure verison has aarch64 and arm64 builds available
typing_extensions = "^4.0"


[tool.poetry.extras]
xfmr = ["ray"]


[tool.poetry.dev-dependencies]
# Development dependencies are pinned so that a constant development
# environment can be easily maintained and recreated. pre-commit is handled via
# pipx and all precommit requirements are installed using `pre-commit intall`
pytest = "6.2.5"
pytest-cov = "3.0.0"
pytest-sugar = "0.9.4"
ipython = "8.2.0"
mypy = "0.940"
sphinx = "4.5.0"
pydata-sphinx-theme = "0.8.1"
pyspark = "3.3.0"  # required for testing xfmr fully
sphinx-design = "0.1.0"
types-PyYAML = "6.0.7"


[build-system]
requires = ["poetry-core>=1.2.0"]
build-backend = "poetry.core.masonry.api"


[tool.isort]
py_version = 310
profile = "black"
no_lines_before = ["future", "stdlib"]
force_single_line = false
combine_as_imports = true
lines_between_types = 0
lines_after_imports = 2
src_paths = ["src", "tests"]
extend_skip = ["setup.py"]


[tool.black]
target-version = ['py39']
preview = true
force-exclude = '''
.*/setup\.py$
'''


[tool.mypy]
files = "src"
check_untyped_defs = true
disallow_untyped_defs = true
ignore_missing_imports = true
no_implicit_optional = true
show_error_codes = true
# warn_return_any = true
warn_unused_ignores = true
# enable_error_code = ["ignore-without-code"]
# strict = true

# [[tool.mypy.overrides]]
# module = [
#     "matplotlib.*",
#     "pandas.*",
#     "sklearn.*"
# ]
# ignore_missing_imports = true

# [[tool.mypy.overrides]]
# module = ["numpy", "numpy.*"]
# disallow_any_decorated = false    # true if you never plan to use Any
# disallow_untyped_defs = false     # true if you never plan to use Any
# disallow_any_explicit = false     # true if you never plan to use Any
# disallow_any_generics = false     # true if you never plan to use Any
# disallow_subclassing_any = false
# ignore_missing_imports = true


[tool.coverage.report]
exclude_lines = ["pragma: no cover", "if TYPE_CHECKING:"]
