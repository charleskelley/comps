[tool.poetry]
name = "comps"
version = "0.0.1"
description = "Comparative and causal analysis"
authors = ["Charles Kelley"]
license = "BSD-3-Clause"
readme = "README.rst"

packages = [{ include = "comps", from = "src" }]
include = [{ path = "tests", format = "sdist" }]

repository = "https://github.com/cksisu/comps"
documentation = "httx://comps/doc/host"

keywords = ["ml", "statistics", "comps"]
classifiers = [
  "Environment :: Console",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Topic :: Scientific/Engineering :: Information Analysis",
]

[tool.poetry.build]
generate-setup-file = false


[tool.poetry.dependencies]
# Packages requried to use all comps package computation and visualization
# related functions and methods
python = ">=3.8,<3.10"
scikit-learn =  "^1.0"
scipy =  "^1.8"
matplotlib = "^3.3"
typing_extensions = "^4.0"

# Optional dependencies required to use the transformer (xfmr) portion of comps
# to interact directly interact with popular DataFrame types
pandas = { version = "^1.3", optional = true }
polars = { version = "^0.13", optional = true }
pyspark = { version = "^3.1", optional = true }
vaex-core = { version = "^4.6", optional = true }

[tool.poetry.extras]
pandas = ["pandas"]
polars = ["polars"]
spark = ["pyspark"]
vaex = ["vaex-core"]

[tool.poetry.dev-dependencies]
# Development dependencies are pinned so that a constant development
# environment can be easily maintained and recreated
pre-commit = "2.19.0"
pytest = "6.2.5"
pytest-cov = "3.0.0"
pytest-sugar = "0.9.4"
black = "22.3.0"
blackdoc = "0.3.4"
bandit = "1.7.4"
ipython = "8.2.0"
isort = "5.10.1"
mypy = "0.940"
pylint = "2.13.8"
ghp-import = "2.0.2"
flake8 = "4.0.1"
sphinx = "4.5.0"
pydata-sphinx-theme = "0.8.1"
sphinx-design = "0.1.0"
types-PyYAML = "6.0.7"
types-setuptools = "57.4.10"


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"


[tool.isort]
py_version = 39
profile = "black"
no_lines_before = ["future", "stdlib"]
force_single_line = false
combine_as_imports = true
lines_between_types = 0
lines_after_imports = 2
src_paths = ["src", "tests"]
extend_skip = ["setup.py"]


[tool.black]
target-version = ['py37']
preview = true
force-exclude = '''
.*/setup\.py$
'''


[tool.mypy]
disallow_untyped_defs = true
enable_error_code = ["ignore-without-code"]
files = "src"
show_error_codes = true
strict = true

[[tool.mypy.overrides]]
module = [
    "matplotlib.*",
    "sklearn.*"
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "numpy"
disallow_any_decorated = false    # true if you never plan to use Any
disallow_any_explicit = false     # true if you never plan to use Any
disallow_any_generics = false     # true if you never plan to use Any
disallow_subclassing_any = false


[tool.coverage.report]
exclude_lines = ["pragma: no cover", "if TYPE_CHECKING:"]
