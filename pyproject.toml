[build-system]
requires = ["setuptools ~= 65.0", "cython ~= 0.29.0"]


[project]
name = "comps"
version = "0.0.1"
dynamic = ["dependencies", "optional-dependencies"]
description = "Comparative and causal analysis"
readme = "README.rst"
requires-python = ">=3.9"
keywords = ["causal inference", "matching", "ml", "statistics"]
license = {text = "BSD-3-Clause License"}
classifiers = [
  "Environment :: Console",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Topic :: Scientific/Engineering :: Information Analysis",
]

[tool.setuptools.dynamic]
dependencies = {file = "requirements.txt"}
optional-dependencies = {spark = {file = "requirements-dev.txt"}}


[tool.pytest.ini_options]
norecursedirs = "tests/helpers"
# Testing for the Comps package aims to follow the Google testing concepts
# covered in the blog post https://testing.googleblog.com/2010/12/test-sizes.html
markers = [
   "unit: A small test that usually tests a function or method with no cross system of multi-thread processes",
   "integration: A medium test that tests state change across two systems to ensure they can communicate properly",
   "end-to-end: A large test that covers process that touches multiple systems (possibly external) and likely represents a full use case for the application",
]


[tool.isort]
py_version = 310
profile = "black"
no_lines_before = ["future", "stdlib"]
force_single_line = false
combine_as_imports = true
lines_between_types = 0
lines_after_imports = 2
src_paths = ["src", "tests"]
extend_skip = ["setup.py"]


[tool.black]
target-version = ['py39']
preview = true
force-exclude = '''
.*/setup\.py$
'''


[tool.mypy]
files = "src"
check_untyped_defs = true
disallow_untyped_defs = true
ignore_missing_imports = true
no_implicit_optional = true
show_error_codes = true
# warn_return_any = true
warn_unused_ignores = true
# enable_error_code = ["ignore-without-code"]
# strict = true

# [[tool.mypy.overrides]]
# module = [
#     "matplotlib.*",
#     "pandas.*",
#     "sklearn.*"
# ]
# ignore_missing_imports = true

# [[tool.mypy.overrides]]
# module = ["numpy", "numpy.*"]
# disallow_any_decorated = false    # true if you never plan to use Any
# disallow_untyped_defs = false     # true if you never plan to use Any
# disallow_any_explicit = false     # true if you never plan to use Any
# disallow_any_generics = false     # true if you never plan to use Any
# disallow_subclassing_any = false
# ignore_missing_imports = true


[tool.coverage.report]
exclude_lines = ["pragma: no cover", "if TYPE_CHECKING:"]
